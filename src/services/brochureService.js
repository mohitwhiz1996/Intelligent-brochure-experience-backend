const PDFDocument = require('pdfkit');

class BrochureService {
  /**
   * Generate a PDF brochure with title, description, and AI-analyzed images
   * @param {Object} data - Brochure data
   * @param {string} data.title - Brochure title
   * @param {string} data.description - User description
   * @param {Array} data.imageUrls - Array of image URLs
   * @param {Array} data.aiDescriptions - Array of AI-generated descriptions
   * @returns {Buffer} PDF buffer
   */
  async generateBrochure(data) {
    return new Promise((resolve, reject) => {
      try {
        const doc = new PDFDocument({
          size: 'A4',
          layout: 'portrait',
          margins: {
            top: 50,
            bottom: 50,
            left: 50,
            right: 50
          }
        });

        const chunks = [];
        doc.on('data', chunk => chunks.push(chunk));
        doc.on('end', () => resolve(Buffer.concat(chunks)));

        // Add title
        doc.fontSize(24)
           .font('Helvetica-Bold')
           .text(data.title, { align: 'center' })
           .moveDown(2);

        // Add user description
        doc.fontSize(14)
           .font('Helvetica')
           .text('Description:', { underline: true })
           .moveDown(0.5)
           .fontSize(12)
           .text(data.description)
           .moveDown(2);

        // Add images and AI descriptions
        if (data.imageUrls && data.imageUrls.length > 0) {
          doc.fontSize(16)
             .font('Helvetica-Bold')
             .text('Image Analysis:', { underline: true })
             .moveDown(1);

          for (let i = 0; i < data.imageUrls.length; i++) {
            const imageUrl = data.imageUrls[i];
            const aiDescription = data.aiDescriptions[i] || 'No description available';

            // Add image number
            doc.fontSize(14)
               .font('Helvetica-Bold')
               .text(`Image ${aiDescription.imageNumber || i + 1}:`, { underline: true })
               .moveDown(0.5);

            // Add AI description
            doc.fontSize(12)
               .font('Helvetica')
               .text(aiDescription.description || aiDescription)
               .moveDown(0.5);

            // Add image URL reference
            doc.fontSize(10)
               .font('Helvetica-Oblique')
               .text(`Source: ${aiDescription.imageUrl || imageUrl}`)
               .moveDown(1);

            // Add separator line
            if (i < data.imageUrls.length - 1) {
              doc.moveTo(50, doc.y)
                 .lineTo(545, doc.y)
                 .stroke()
                 .moveDown(1);
            }
          }
        }

        // Add footer
        doc.moveDown(2);
        doc.fontSize(10)
           .font('Helvetica-Oblique')
           .text('Generated by AI Brochure Generator', { align: 'center' });

        doc.end();
      } catch (error) {
        reject(error);
      }
    });
  }
}

module.exports = {
  generateBrochure: (data) => new BrochureService().generateBrochure(data)
};
